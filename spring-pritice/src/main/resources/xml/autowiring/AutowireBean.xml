<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--    default-autowire-candidates 默认自动装配候选者，未指定的Name Bean 不会作为候选者被自动装配-->
    <bean id="secondAutowireBean1" name="secondAutowireBean" class="com.scarecrow.spring.pritice.xml.autowiring.SecondAutowireBean">
        <property name="desc" value="SecondAutowireBean"/>
    </bean>
    <!--    autowire-candidate设置为false byType不会查找此bean,但不影响byName根据名称自动装配 -->
    <bean id="thirdAutowireBean" class="com.scarecrow.spring.pritice.xml.autowiring.ThirdAutowireBean" autowire-candidate="false">
        <property name="desc" value="ThirdAutowireBean"/>
    </bean>
    
    <bean id="thirdAutowireBeanOther" class="com.scarecrow.spring.pritice.xml.autowiring.ThirdAutowireBean">
        <property name="desc" value="thirdAutowireBeanOther"/>
    </bean>
    
    <!--    primary="true" 根据类型自动化装配，当有多个相同类型的Bean.优先使用primary="true"的Bean-->
    <bean id="thirdAutowireBeanPrimary" class="com.scarecrow.spring.pritice.xml.autowiring.ThirdAutowireBean" primary="true">
        <property name="desc" value="thirdAutowireBeanPrimary"/>
    </bean>
    
    <!--    byName bean的name必须与类的字段名称一样    -->
    <!--    byType 同一个类型的bean类型只能有一个   map、collection、array 可以根据类型自动匹配，String不可以  Strings, and Classes (and arrays of such simple properties) -->
    <!--    constructor 构造函数参数类型的bean缺失一个都会异常    -->
    <bean id="firstAutowireBean" class="com.scarecrow.spring.pritice.xml.autowiring.FirstAutowireBean" autowire="byType">
        <!--    显式依赖项总是覆盖自动装配-->
<!--        <property name="thirdAutowireBean" ref="thirdAutowireBean"/>-->
    </bean>
    
    <bean id="testStringBean" class="java.lang.String">
        <constructor-arg index="0" value="testStringBean"/>
    </bean>
    
    <bean id="list" class="java.util.ArrayList">
        <constructor-arg index="0">
            <list>
                <value>1</value>
                <value>2</value>
                <value>3</value>
            </list>
        </constructor-arg>
    </bean>
    
    <bean id="map" class="java.util.HashMap">
        <constructor-arg index="0">
            <map>
                <entry key="1" value="1"/>
                <entry key="2" value="2"/>
            </map>
        </constructor-arg>
    </bean>
    
</beans>
